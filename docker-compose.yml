
  services:
    db:
      image: postgres:16
      restart: unless-stopped
      environment:
        POSTGRES_USER: ${DB_USER:-postgres}
        POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
        POSTGRES_DB: ${DB_NAME:-app_development}
      volumes:
        - pgdata:/var/lib/postgresql/data
      ports:
        - "5432:5432"
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 5s
        timeout: 5s
        retries: 5

    web:
      build:
        context: ./himera
        dockerfile: Dockerfile
      volumes:
        - ./himera:/rails
      env_file:
        - .env
      ports:
        - "3000:80"
      depends_on:
        db:
          condition: service_healthy
      environment:
        RAILS_ENV: development
        DB_HOST: db
        DB_USER: ${DB_USER:-postgres}
        DB_PASSWORD: ${DB_PASSWORD:-postgres}
        DB_NAME: ${DB_NAME:-app_development}
        DB_PORT: ${DB_PORT:-5432}
      command: ./bin/rails server -b 0.0.0.0 -p 80

    yota:
      build:
        context: ./yota
        dockerfile: Dockerfile
      depends_on:
        db:
          condition: service_healthy
      env_file:
        - .env
      environment:
        DB_HOST: db
        DB_PORT: 5432
        DB_USER: ${DB_USER:-postgres}
        DB_PASSWORD: ${DB_PASSWORD:-postgres}
        DB_NAME: ${DB_NAME:-app_development}
        NODE_ENV: production
      volumes:
        - ./yota:/app
      working_dir: /app
      command: ["node", "orchestrator.js"]

  volumes:
    pgdata: