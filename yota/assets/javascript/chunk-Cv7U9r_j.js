import {bO as Zu,aO as K,aP as R,b1 as i$1,b2 as le,a1 as x,a2 as w$1,d3 as n$1,c3 as j,dL as Ce,c4 as ze,m as U,F,aI as q}from'./main-GV3FATOT.js';var A={order:"asc",limit:9,offset:0},$=(()=>{class i extends i$1{constructor(e,t,o,s){super(),this._dataStateService=e,this._storeApiService=t,this._regionService=o,this._request=s;}getCategories$(){let e=this._regionService.getRegionCode();return this._dataStateService.setEndGet$(`good-categories-${e}`,this._storeApiService.getCategories().pipe(le(t=>t||[])),[])}getGoods$(e){let t=this._regionService.getRegionCode(),o=btoa(JSON.stringify(e)),s={categoryIds:e.categoryIds||[],excludedIds:e.excludedIds||[],includedIds:e.includedIds||[],promoIds:[]};return this._dataStateService.setEndGet$(`goods-${t}-${o}`,this._storeApiService.getGoods(x(w$1({},e),{body:s})),{})}getPromoGoods$(e){let t=this._regionService.getRegionCode(),o=x(w$1({},A),{promoIds:[e]});return this._dataStateService.setEndGet$(`promo-goods-${t}`,this._storeApiService.getGoods(o),{})}getGood$(e,t){let o=this._regionService.getRegionCode(),s={commerceType:e,goodName:t},l=btoa(JSON.stringify(s));return this._dataStateService.setEndGet$(`good-${o}-${l}`,this._storeApiService.getGood(s),null)}getRelatedGoods$(e){let t=this._regionService.getRegionCode(),o=btoa(JSON.stringify(e));return this._dataStateService.setEndGet$(`goods-${t}-${o}`,this._storeApiService.getRelatedGood$Json(e),{})}static{this.\u0275fac=function(t){return new(t||i)(K(j),K(Ce),K(ze),K(n$1,8))};}static{this.\u0275prov=R({token:i,factory:i.\u0275fac,providedIn:"root"});}}return i})();var C=function(i){return i.ASC="asc",i.DESC="desc",i}(C||{}),I="767px",D=(()=>{class i{constructor(e,t,o,s){this._storeApiService=e,this._breakpointObserver=t,this._route=o,this._router=s,this.isMobile=this._breakpointObserver.isMatched(`(max-width: ${I})`).valueOf(),this.queryParams$=this._route.queryParams,this._categories$=null;}fetchCategories$(){return this._categories$||(this._categories$=this._storeApiService.getCategories$().pipe(Zu(1))),this._categories$}fetchGoods$(e){return this._storeApiService.getGoods$(e)}applyQuery(e){this._router.navigate([],{queryParams:e,queryParamsHandling:"merge"});}static{this.\u0275fac=function(t){return new(t||i)(K($),K(U),K(F),K(q))};}static{this.\u0275prov=R({token:i,factory:i.\u0275fac,providedIn:"root"});}}return i})();export{$,C,D};